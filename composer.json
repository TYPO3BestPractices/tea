{
	"name": "ttn/tea",
	"description": "TYPO3 example extension for unit testing and best practices",
	"license": "GPL-2.0-or-later",
	"type": "typo3-cms-extension",
	"keywords": [
		"typo3",
		"example",
		"extension",
		"tdd",
		"phpunit",
		"unit testing",
		"best practices"
	],
	"authors": [
		{
			"name": "Oliver Klee",
			"email": "typo3-coding@oliverklee.de",
			"homepage": "https://www.oliverklee.de",
			"role": "maintainer"
		},
		{
			"name": "Daniel Siepmann",
			"email": "coding@daniel-siepmann.de",
			"homepage": "https://daniel-siepmann.de/",
			"role": "maintainer"
		},
		{
			"name": "Łukasz Uznański",
			"email": "lukaszuznanski94@gmail.com",
			"homepage": "https://uznanski.pl/",
			"role": "maintainer"
		}
	],
	"homepage": "https://extensions.typo3.org/extension/tea/",
	"support": {
		"issues": "https://github.com/TYPO3BestPractices/tea/issues",
		"source": "https://github.com/TYPO3BestPractices/tea",
		"docs": "https://docs.typo3.org/p/ttn/tea/main/en-us/"
	},
	"require": {
		"php": "~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0 || ~8.5.0",
		"psr/http-message": "^1.0.1",
		"typo3/cms-core": "^12.4",
		"typo3/cms-extbase": "^12.4.31 || ^13.4",
		"typo3/cms-fluid": "^12.4.31 || ^13.4",
		"typo3/cms-frontend": "^12.4.31 || ^13.4"
	},
	"require-dev": {
		"ergebnis/composer-normalize": "2.48.2",
		"friendsofphp/php-cs-fixer": "3.89.0",
		"helmich/typo3-typoscript-lint": "^3.3.0",
		"icanhazstring/composer-unused": "0.8.11 || 0.9.3",
		"php-parallel-lint/php-parallel-lint": "1.4.0",
		"phpmd/phpmd": "2.15.0",
		"phpstan/extension-installer": "1.4.3",
		"phpstan/phpstan": "1.12.28 || 2.1.22",
		"phpstan/phpstan-phpunit": "1.4.2 || 2.0.7",
		"phpstan/phpstan-strict-rules": "1.6.2 || 2.0.6",
		"phpunit/phpunit": "10.5.53",
		"rector/type-perfect": "1.0.0 || 2.1.1",
		"saschaegerer/phpstan-typo3": "1.10.2 || 2.1.1",
		"seld/jsonlint": "1.11.0",
		"spaze/phpstan-disallowed-calls": "4.6.0",
		"ssch/typo3-rector": "2.15.2 || 3.6.2",
		"ssch/typo3-rector-testing-framework": "2.0.1 || 3.0.0",
		"symfony/console": "6.4.25 || 7.3.3",
		"symfony/translation": "6.4.24 || 7.3.3",
		"symfony/yaml": "6.4.25 || 7.3.3",
		"tomasvotruba/cognitive-complexity": "0.2.3 || 1.0.0",
		"tomasvotruba/type-coverage": "1.0.0 || 2.0.2",
		"typo3/cms-fluid-styled-content": "^12.4.31 || ^13.4",
		"typo3/coding-standards": "0.8.0",
		"typo3/testing-framework": "8.2.7",
		"webmozart/assert": "^1.11.0"
	},
	"replace": {
		"typo3-ter/tea": "self.version"
	},
	"conflict": {
		"typo3/class-alias-loader": "< 1.1.0"
	},
	"prefer-stable": true,
	"autoload": {
		"psr-4": {
			"TTN\\Tea\\": "Classes/"
		}
	},
	"autoload-dev": {
		"psr-4": {
			"TTN\\Tea\\Tests\\": "Tests/"
		}
	},
	"config": {
		"allow-plugins": {
			"ergebnis/composer-normalize": true,
			"phpstan/extension-installer": true,
			"sbuerk/typo3-cmscomposerinstallers-testingframework-bridge": true,
			"typo3/class-alias-loader": true,
			"typo3/cms-composer-installers": true
		},
		"bin-dir": ".Build/bin",
		"lock": false,
		"preferred-install": {
			"*": "dist"
		},
		"sort-packages": true,
		"vendor-dir": ".Build/vendor"
	},
	"extra": {
		"branch-alias": {
			"dev-main": "4.0.x-dev"
		},
		"typo3/cms": {
			"extension-key": "tea",
			"web-dir": ".Build/public"
		}
	},
	"scripts": {
		"check:composer:normalize": "@composer normalize --no-check-lock --dry-run",
		"check:composer:psr-verify": "@composer dumpautoload --optimize --strict-psr --no-plugins",
		"check:composer:unused": "composer-unused --configuration=Build/composer-unused/composer-unused.php",
		"check:coverage": [
			"@check:coverage:unit",
			"@check:coverage:functional"
		],
		"check:coverage:functional": [
			"@check:tests:create-directories",
			"@coverage:create-directories",
			"phpunit -c Build/phpunit/FunctionalTests.xml --coverage-php=build/coverage/functional.cov"
		],
		"check:coverage:merge": [
			"@coverage:create-directories",
			"@php tools/phpcov merge --clover=build/logs/clover.xml build/coverage/"
		],
		"check:coverage:unit": [
			"@coverage:create-directories",
			"phpunit -c Build/phpunit/UnitTests.xml --coverage-php=build/coverage/unit.cov"
		],
		"check:json:lint": "find . ! -path '*/.cache/*' ! -path '*/.Build/*' ! -path '*/node_modules/*' -name '*.json' | xargs -r php .Build/bin/jsonlint -q",
		"check:php": [
			"@check:php:cs-fixer",
			"@check:php:lint",
			"@check:php:stan"
		],
		"check:php:cs-fixer": "php-cs-fixer fix --config ./Build/php-cs-fixer/php-cs-fixer.php -v --dry-run --diff",
		"check:php:lint": "parallel-lint *.php Build Classes Configuration Tests",
		"check:php:mess": "phpmd Classes text Build/phpmd/phpmd.xml",
		"check:php:rector": "rector --dry-run --config=./Build/rector/rector.php",
		"check:php:stan": "phpstan --no-progress -v --configuration=Build/phpstan/phpstan.neon",
		"check:static": [
			"@check:composer:normalize",
			"@check:composer:unused",
			"@check:json:lint",
			"@check:php:lint",
			"@check:composer:psr-verify",
			"@check:php:rector",
			"@check:php:stan",
			"@check:php:cs-fixer",
			"@check:typoscript:lint",
			"@check:xliff:lint",
			"@check:yaml:lint"
		],
		"check:tests:create-directories": "mkdir -p .Build/public/typo3temp/var/tests",
		"check:tests:functional": [
			"@check:tests:create-directories",
			"phpunit -c Build/phpunit/FunctionalTests.xml"
		],
		"check:tests:unit": "phpunit -c Build/phpunit/UnitTests.xml",
		"check:typoscript:lint": "typoscript-lint -c Build/typoscript-lint/TypoScriptLint.yml --ansi -n --fail-on-warnings -vvv Configuration/TypoScript Tests/Functional/Controller/Fixtures/TypoScript",
		"check:xliff:lint": "php Build/xliff/xliff-lint lint:xliff Resources/Private/Language",
		"check:yaml:lint": "find . ! -path '*.Build/*' ! -path '*node_modules/*' \\( -name '*.yaml' -o -name '*.yml' \\) | xargs -r php ./.Build/bin/yaml-lint",
		"coverage:create-directories": "mkdir -p build/coverage build/logs",
		"docs:generate": "docker run --rm --pull always -v $(pwd):/project -it ghcr.io/typo3-documentation/render-guides:latest --config=Documentation",
		"fix": [
			"@fix:composer:normalize",
			"@fix:php"
		],
		"fix:composer:normalize": "@composer normalize --no-check-lock",
		"fix:php": [
			"@fix:php:rector",
			"@fix:php:cs"
		],
		"fix:php:cs": "php-cs-fixer fix --config ./Build/php-cs-fixer/php-cs-fixer.php",
		"fix:php:rector": "rector --config=./Build/rector/rector.php",
		"phpstan:baseline": "phpstan --generate-baseline=Build/phpstan/phpstan-baseline.neon --allow-empty-baseline --configuration=Build/phpstan/phpstan.neon",
		"prepare-release": [
			"rm -rf .Build",
			"rm -rf .ddev",
			"rm -rf .github",
			"rm -rf .gitlab",
			"rm -rf Build",
			"rm -rf Tests",
			"rm -rf tools",
			"rm .editorconfig",
			"rm .gitattributes",
			"rm .gitignore",
			"rm .npmrc",
			"rm .nvmrc",
			"rm package-lock.json",
			"rm package.json",
			"rm phive.xml"
		]
	},
	"scripts-descriptions": {
		"check:composer:normalize": "Checks the composer.json.",
		"check:composer:psr-verify": "Verifies PSR-4 namespace correctness.",
		"check:composer:unused": "Finds unused Composer packages required in composer.json.",
		"check:coverage:functional": "Generates the code coverage report for functional tests.",
		"check:coverage:merge": "Merges the code coverage reports for unit and functional tests.",
		"check:coverage:unit": "Generates the code coverage report for unit tests.",
		"check:json:lint": "Lints the JSON files.",
		"check:php": "Runs all static checks for the PHP files.",
		"check:php:cs-fixer": "Checks the code style with the PHP Coding Standards Fixer (PHP-CS-Fixer).",
		"check:php:lint": "Lints the PHP files for syntax errors.",
		"check:php:mess": "Runs PHP mess detection.",
		"check:php:rector": "Checks for code for changes by Rector.",
		"check:php:stan": "Checks the PHP types using PHPStan.",
		"check:static": "Runs all static code checks (syntax, style, types).",
		"check:tests:create-directories": "Creates the directories required to smoothely run the functional tests.",
		"check:tests:functional": "Runs the functional tests.",
		"check:tests:unit": "Runs the unit tests.",
		"check:typoscript:lint": "Lints the TypoScript files.",
		"check:xliff:lint": "Lints the XLIFF files.",
		"check:yaml:lint": "Lints the YAML files.",
		"coverage:create-directories": "Creates the directories needed for recording and merging the code coverage reports.",
		"docs:generate": "Renders the extension ReST documentation.",
		"fix": "Runs all automatic code style fixes.",
		"fix:composer:normalize": "Normalizes composer.json file content.",
		"fix:php": "Runs all fixers for the PHP code.",
		"fix:php:cs": "Fixes the code style with PHP-CS-Fixer.",
		"fix:php:rector": "Updates the code with Rector.",
		"phpstan:baseline": "Updates the PHPStan baseline file to match the code.",
		"prepare-release": "Removes development-only files in preparation of a TER release."
	}
}
